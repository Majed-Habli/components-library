$navbar-height: 60px;
$font-family: 'Arial, sans-serif';

$color-palette: (
  red: (
    100: #ffe3e3,
    200: #ffaaaa,
    300: #ff7171,
    400: #ff3939,
    500: #ff0000,
    600: #c60000,
    700: #8e0000,
    800: #550000,
    900: #1c0000
  ),
  white: (
    100: #E0F2E9,
    500: #ffffff
  ),
  blue: (
    50: #EAEEF8,
    100: #C0CBE9,
    200: #97A9DA,
    300: #6D86CB,
    400: #5386E4,
    500: #4364BC,
    600: #344D92,
    700: #253768,
    800: #16213F,
    900: #070B15
  ),
  grey: (
    100: #F1F1F1,
    200: #D4D4D4,
    300: #B8B8B8,
    400: #9C9C9C,
    500: #737373,
    600: #636363,
    700: #474747,
    800: #2A2A2A,
    900: #2A2A2A
  ),
  green: (
    100: #ECF6EE,
    200: #C6E3CC,
    300: #A0D0AA,
    400: #7ABD87,
    500: #69B578,
    600: #42854F,
    700: #2F5F38,
    800: #1C3922,
    900: #09130B
  )
);

// Function to get the default color for a given color name
@function get-default-color($color-name) {
  @if not map-has-key($color-palette, $color-name) {
    @warn "Color name '#{$color-name}' is not found in the color palette.";
    @return null; // Or return a fallback color
  }

  @return map-get(map-get($color-palette, $color-name), 500);
}

// Function to get a lighter shade for a given color name and shade
@function get-lighter-shade($color-name, $shade) {
  // Check if the color exists in the palette
  @if not map-has-key($color-palette, $color-name) {
    @warn "Color name '#{$color-name}' is not found in the color palette.";
    @return null; // Or return a fallback color
  }

  // Retrieve the shades for the specified color
  $shades: map-get($color-palette, $color-name);

  // Check if the specific shade exists
  @if not map-has-key($shades, $shade) {
    @warn "Shade '#{$shade}' is not found for color '#{$color-name}'.";
    @return null; // Or return a fallback color
  }

  // Get the current shade value
  $current-color: map-get($shades, $shade);

  // Check if a lighter shade exists in the palette
  $lighter-shade: $shade - 400;
  @if $lighter-shade < 100 {
    @warn "No lighter shade available for '#{$color-name}' at '#{$shade}'.";
    @return $current-color; // Fallback to the original color
  }

  // Return the lighter shade if it exists, else fallback to the original
  @if map-has-key($shades, $lighter-shade) {
    @return map-get($shades, $lighter-shade);
  } @else {
    @return $current-color; // Fallback if no lighter shade exists
  }
}
