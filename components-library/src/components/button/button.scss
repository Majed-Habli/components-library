@import '../../styles/base/variables';
@import '../../styles/base/mixins';
@import './button-mixins.scss';

.button {
    padding: 3px 9px;
    border: none;
    cursor: pointer;
    border-radius: 4px;
    background-color: white;
    outline: none;

    &.link {
        margin: 0 !important;
    }

    &.btn--outlined {
        border: 1px solid rgb(37, 37, 37);
        &:hover {
            border-color:darken(rgb(37, 37, 37), 10%);
            color:darken(rgb(37, 37, 37), 10%);
            border: 2px solid;
        }
    }

    &.btn--solid {
        background-color: rgb(37, 37, 37);
        color: white;
        &:hover {
            background-color: darken(rgb(37, 37, 37), 10%);
        }
    }

    &.btn--text {
        color: rgb(37, 37, 37);
        &:hover {
            background-color: lighten(rgb(37, 37, 37), 75%);
        }
        &:focus-visible {
            border: none;
        }
    }

    &:focus-visible {
        border: 2px solid;
        box-shadow: 0 0 0 4px lighten(rgb(37, 37, 37), 70%);
    }
}

.button {
    &.btn--small {
        @include button-size(5px, 15px, 13px);
    }

    &.btn--medium {
        @include button-size(7px, 17px, 14px);
    }

    &.btn--large {
        @include button-size(9px, 19px, 16px);
    }
}

// Generate color classes
@each $color-name, $shades in $color-palette {
    @each $shade-name, $shade-value in $shades {
      $opacity : 0.8;
      .btn--#{$color-name}-#{$shade-name} {
        &.btn--outlined {
          border-color: $shade-value;
          color: $shade-value;
          &:hover {
                border-color:darken($shade-value, 10%);
                color:darken($shade-value, 10%);
                border: 2px solid;
            }
        }
  
        &.btn--solid {
          background-color: $shade-value;
          color: white;
          &:hover {
                background-color: darken($shade-value, 10%);
            }
        }
  
        &.btn--text {
          color: $shade-value;
          &:hover {
                background-color: mix(rgb(255, 255, 255), $shade-value, $opacity * 100% + 2);
            }
        }
        &:focus-visible {
            border: 2px solid;
            box-shadow: 0 0 0 4px lighten($shade-value, 15%);
        }
      }
    }
  }
  
  @include mobile {
    .button {
        min-width: 100%;
    }
    .link {
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: fit-content;
    }
  }